{
    "key": "HACK-012",
    "summary": "HTTP Request Smuggling",
    "description": "Exploit discrepancies in how front-end and back-end servers process ambiguous HTTP requests, allowing for request interception.",
    "category": "Protocol Exploit",
    "severity": "Critical",
    "testing_type": "Penetration Test",
    "target": "Systems behind a reverse proxy, load balancer, or CDN",
    "instructions": "1. This test requires crafting raw requests, potentially via the browser console's `fetch` API with header manipulation capabilities.\n2. Send a POST request to the target with both `Content-Length` and `Transfer-Encoding: chunked` headers. This is known as a CL.TE probe.\n3. The smuggled payload should be a simple GET request to a known endpoint.\n4. Observe the responses. A time delay or an unexpected response indicates the back-end server processed a prepended request. The goal is to poison the socket for the next user.\n5. Document the exact request that caused the desynchronization. This is a highly technical test requiring precise request crafting."
}